/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule SharedNodeCanCreateCbcReportTransaction {
    description: "SharedNodes can create CbcReport transaction"
    participant: "org.acme.cbcreporting.SharedNode"
    operation: CREATE
    resource: "org.acme.cbcreporting.CreateCbcReport"
    action: ALLOW
}
rule SharedNodeCanCreateCbcReport {
    description: "SharedNodes can create CbcReports only through CbcReport transaction"
    participant: "org.acme.cbcreporting.SharedNode"
    operation: CREATE
    resource: "org.acme.cbcreporting.CbcReport"
    transaction: "org.acme.cbcreporting.CreateCbcReport"
    action: ALLOW
}

rule SharedNodeCanRead {
    description: "SharedNodes view cbcreport they created"
    participant(p): "org.acme.cbcreporting.SharedNode"
    operation: READ
    resource(c): "org.acme.cbcreporting.CbcReport"
    condition: (c.sharedNode.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule SharedNodeCanSeeTA{
	description: "SharedNode can see TA"
  	participant: "org.acme.cbcreporting.SharedNode"
  	operation: READ
    	resource: "org.acme.cbcreporting.TaxAuthority"
  	action: ALLOW
}
rule SharedNodeCanUpdate {
    description: "SharedNodes can edit the cbcreports they have created only if it is not endorsed and if it is done throug UpdateCbcReport transaction"
    participant(p): "org.acme.cbcreporting.SharedNode"
    operation: UPDATE
    resource(c): "org.acme.cbcreporting.CbcReport"
    transaction: "org.acme.cbcreporting.UpdateCbcReport"
    condition: ((c.sharedNode.getIdentifier() == p.getIdentifier())&&(c.isEndorsed=="false"))
    action: ALLOW
}

rule SharedNodeViewOwnReport{
	description: "Grant MNE rights to view own reports"
  	participant(h): "org.acme.cbcreporting.SharedNode"
  	operation: ALL
    	resource(m): "org.acme.cbcreporting.CbcReport"
  	condition: (m.sharedNode.getIdentifier() == h.getIdentifier())
  	action: ALLOW
}

rule TaxAuthCanCreateEndorseTransaction {
    description: "TaxAuthority can create the endorseTransaction"
    participant: "org.acme.cbcreporting.TaxAuthority"
    operation: CREATE
    resource: "org.acme.cbcreporting.EndorseCbcReport"
    action: ALLOW
}

rule TaxAuthCanRemovePartnerTaxAuthority {
    description: "TaxAuthority can create the endorseTransaction"
    participant: "org.acme.cbcreporting.TaxAuthority"
    operation: CREATE
    resource: "org.acme.cbcreporting.RemovePartnerTaxAuthority"
    action: ALLOW
}

rule TaxAuthCanAddPartnerTaxAuthority {
    description: "TaxAuthority can create the endorseTransaction"
    participant: "org.acme.cbcreporting.TaxAuthority"
    operation: CREATE
    resource: "org.acme.cbcreporting.AddPartnerTaxAuthority"
    action: ALLOW
}

rule TaxAuthCaEditCbcReportThroughEndorse {
    description: "TaxAuthority update CbcReports only through endorsement"
    participant: "org.acme.cbcreporting.TaxAuthority"
    operation: UPDATE
    resource: "org.acme.cbcreporting.CbcReport"
  	transaction: "org.acme.cbcreporting.EndorseCbcReport"
    action: ALLOW
}

rule TaxAuthorityViewOwnReport {
	description: "Grant TA rights to view own jurisdiction reports"
  	participant(h): "org.acme.cbcreporting.TaxAuthority"
  	operation: ALL
    resource(m): "org.acme.cbcreporting.CbcReport"
  	condition: (m.sharedNode.taxAuth.getIdentifier() == h.getIdentifier())
  	action: ALLOW
}

rule TaxAuthorityViewOtherReport {
	description: "Grant TA rights to view other reports"
  	participant(h): "org.acme.cbcreporting.TaxAuthority"
  	operation: ALL
    resource(m): "org.acme.cbcreporting.CbcReport"
  	condition: (m.sharedCountryList.includes(h.countryCode))
  	action: ALLOW
}

rule TaxAuthorityViewSharedNode {
	description: "TA view own sharedNode"
  	participant: "org.acme.cbcreporting.TaxAuthority"
  	operation: ALL
    resource: "org.acme.cbcreporting.SharedNode"
  	action: ALLOW
}

rule TaxAuthorityViewOtherSharedNode {
	description: "TA view other sharedNode"
  	participant(h): "org.acme.cbcreporting.TaxAuthority"
  	operation: READ
    resource: "org.acme.cbcreporting.SharedNode"
  	condition: (m.TaxAuth.getIdentifier() != h.getIdentifier())
  	action: ALLOW
}

rule TaxAuthoritySeesOtherTaxAuthority {
	description: "TA view other sharedNode"
  	participant: "org.acme.cbcreporting.TaxAuthority"
  	operation: ALL
    resource: "org.acme.cbcreporting.TaxAuthority"
  	action: ALLOW
}

rule DenyAccessOnReport {
	description: "Deny access on report"
  	participant: "**"
  	operation: ALL
    resource: "org.acme.cbcreporting.CbcReport"
  	action: DENY
}

rule AllAccess {
  description: "AllAccess - grant everything to everybody"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

